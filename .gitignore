_site
.sass-cache
Gemfile.lock
.jsbeautifyrc
*.swp
.idea/
_before/.ipynb_checkpoints/


# Created by https://www.gitignore.io/api/c,sas,git,vim,osx,c++,perl,node,sass,java,ruby,cuda,latex,linux,macos,pydev,julia,cmake,xcode,django,jekyll,python,windows,gitbook,pycharm,phpstorm,commonlisp,sublimetext,visualstudio,jetbrains+all,jupyternotebook

### C ###
# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

### C++ ###
# Prerequisites

# Compiled Object files
*.slo

# Precompiled Headers

# Compiled Dynamic libraries

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai

# Executables

### CMake ###
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
build

### CommonLisp ###
*.FASL
*.fasl
*.lisp-temp
*.dfsl
*.pfsl
*.d64fsl
*.p64fsl
*.lx64fsl
*.lx32fsl
*.dx64fsl
*.dx32fsl
*.fx64fsl
*.fx32fsl
*.sx64fsl
*.sx32fsl
*.wx64fsl
*.wx32fsl

### CUDA ###
*.i
*.ii
*.gpu
*.ptx
*.cubin
*.fatbin

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Git ###
*.orig

### GitBook ###
# Node rules:
## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

## Dependency directory
## Commenting this out is preferred by some people, see
## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git
node_modules

# Book build output
_book

# eBook build output
*.epub
*.mobi
*.pdf

### Java ###
# Compiled class file
*.class

# Log file

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

### JetBrains+all ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff:
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/dictionaries

# Sensitive or high-churn files:
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.xml
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml

# Gradle:
.idea/**/gradle.xml
.idea/**/libraries

# CMake
cmake-build-debug/

# Mongo Explorer plugin:
.idea/**/mongoSettings.xml

## File-based project format:
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Ruby plugin and RubyMine
/.rakeTasks

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

### JetBrains+all Patch ###
# Ignores the whole idea folder
# See https://github.com/joeblau/gitignore.io/issues/186 and https://github.com/joeblau/gitignore.io/issues/360

.idea/

### Julia ###
*.jl.cov
*.jl.*.cov
*.jl.mem
deps/deps.jl

### Jekyll ###
_site/
.sass-cache/
.jekyll-metadata

### LaTeX ###
## Core latex/pdflatex auxiliary files:
*.aux
*.lof
*.lot
*.fls
*.toc
*.fmt
*.fot
*.cb
*.cb2

## Intermediate documents:
*.dvi
*.xdv
*-converted-to.*
# these rules might exclude image files for figures etc.
# *.ps
# *.eps
# *.pdf

## Generated if empty string is given at "Please type another file name for output:"
.pdf

## Bibliography auxiliary files (bibtex/biblatex/biber):
*.bbl
*.bcf
*.blg
*-blx.aux
*-blx.bib
*.run.xml

## Build tool auxiliary files:
*.fdb_latexmk
    *.synctex
*.synctex(busy)
    *.synctex.gz
*.synctex.gz(busy)
    *.pdfsync
    *Notes.bib

## Auxiliary and intermediate files from other packages:
# algorithms
    *.alg
    *.loa

# achemso
    acs-*.bib

# amsthm
    *.thm

# beamer
    *.nav
    *.pre
    *.snm
    *.vrb

# changes
    *.soc

# cprotect
    *.cpt

# elsarticle (documentclass of Elsevier journals)
    *.spl

# endnotes
    *.ent

# fixme
    *.lox

# feynmf/feynmp
    *.mf
    *.mp
    *.t[1-9]
    *.t[1-9][0-9]
    *.tfm

#(r)(e)ledmac/(r)(e)ledpar
    *.end
    *.?end
    *.[1-9]
    *.[1-9][0-9]
    *.[1-9][0-9][0-9]
    *.[1-9]R
    *.[1-9][0-9]R
    *.[1-9][0-9][0-9]R
    *.eledsec[1-9]
    *.eledsec[1-9]R
    *.eledsec[1-9][0-9]
    *.eledsec[1-9][0-9]R
    *.eledsec[1-9][0-9][0-9]
    *.eledsec[1-9][0-9][0-9]R

# glossaries
    *.acn
    *.acr
    *.glg
    *.glo
    *.gls
    *.glsdefs

# gnuplottex
    *-gnuplottex-*

# gregoriotex
    *.gaux
    *.gtex

# hyperref
    *.brf

# knitr
    *-concordance.tex
# TODO Comment the next line if you want to keep your tikz graphics files
    *.tikz
    *-tikzDictionary

# listings
    *.lol

# makeidx
    *.idx
    *.ilg
    *.ind
    *.ist

# minitoc
    *.maf
    *.mlf
    *.mlt
    *.mtc[0-9]*
    *.slf[0-9]*
    *.slt[0-9]*
    *.stc[0-9]*

# minted
    _minted*
    *.pyg

# morewrites
    *.mw

# nomencl
    *.nlo

# pax
    *.pax

# pdfpcnotes
    *.pdfpc

# sagetex
    *.sagetex.sage
    *.sagetex.py
    *.sagetex.scmd

# scrwfile
    *.wrt

# sympy
    *.sout
    *.sympy
    sympy-plots-for-*.tex/

# pdfcomment
    *.upa
    *.upb

# pythontex
    *.pytxcode
    pythontex-files-*/

# thmtools
    *.loe

# TikZ & PGF
    *.dpth
    *.md5
    *.auxlock

# todonotes
    *.tdo

# easy-todo
    *.lod

# xindy
    *.xdy

# xypic precompiled matrices
    *.xyc

# endfloat
    *.ttt
    *.fff

# Latexian
    TSWLatexianTemp*

## Editors:
# WinEdt
    *.bak
    *.sav

# Texpad
    .texpadtmp

# Kile
    *.backup

# KBibTeX
    *~[0-9]*

# auto folder when using emacs and auctex
    /auto/*

# expex forward references with \gathertags
          *-tags.tex

### Linux ###
          *~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

### macOS ###
*.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### Node ###
# Logs
logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
          *.pid
          *.seed
          *.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)

# Bower dependency directory (https://bower.io/)
    bower_components

# node-waf configuration
    .lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
    build/Release

# Dependency directories
    node_modules/
    jspm_packages/

# Typescript v1 declaration files
    typings/

# Optional npm cache directory
    .npm

# Optional eslint cache
    .eslintcache

# Optional REPL history
    .node_repl_history

# Output of 'npm pack'
    *.tgz

# Yarn Integrity file
    .yarn-integrity

# dotenv environment variables file
    .env


### JupyterNotebook ###
    .ipynb_checkpoints
    */.ipynb_checkpoints/*

# Remove previous ipynb_checkpoints
   git rm -r .ipynb_checkpoints/
#
### Perl ###
!Build/
.last_cover_stats
/META.yml
/META.json
/MYMETA.*
                         *.pm.tdy
                         *.bs

# Devel::Cover
cover_db/

# Devel::NYTProf
nytprof.out

# Dizt::Zilla
/.build/

# Module::Build
_build/
Build
Build.bat

# Module::Install
inc/

# ExtUitls::MakeMaker
/blib/
/_eumm/
    /*.gz
    /Makefile
    /Makefile.old
    /MANIFEST.bak
    /pm_to_blib
    /*.zip

### PhpStorm ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff:

# Sensitive or high-churn files:

# Gradle:

# CMake

# Mongo Explorer plugin:

## File-based project format:

## Plugin-specific files:

# IntelliJ

# mpeltonen/sbt-idea plugin

# JIRA plugin

# Cursive Clojure plugin

# Ruby plugin and RubyMine

# Crashlytics plugin (for Android Studio and IntelliJ)

### PhpStorm Patch ###
# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint plugin
.idea/sonarlint

### PyCharm ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff:

# Sensitive or high-churn files:

# Gradle:

# CMake

# Mongo Explorer plugin:

## File-based project format:

## Plugin-specific files:

# IntelliJ

# mpeltonen/sbt-idea plugin

# JIRA plugin

# Cursive Clojure plugin

# Ruby plugin and RubyMine

# Crashlytics plugin (for Android Studio and IntelliJ)

### PyCharm Patch ###
# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint plugin

### pydev ###
    .pydevproject

### Python ###
# Byte-compiled / optimized / DLL files
    *.py[cod]
    *$py.class

# C extensions

# Distribution / packaging
    .Python
    build/
    develop-eggs/
    dist/
    downloads/
    eggs/
    .eggs/
    lib/
    lib64/
    parts/
    sdist/
    var/
    wheels/
    *.egg-info/
    .installed.cfg
    *.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
    *.manifest
    *.spec

# Installer logs
    pip-log.txt
    pip-delete-this-directory.txt

# Unit test / coverage reports
    htmlcov/
    .tox/
    .coverage
    .coverage.*
    .cache
    nosetests.xml
    coverage.xml
    *.cover
    .hypothesis/

# Translations
    *.mo

# Django stuff:

# Flask stuff:
    instance/
    .webassets-cache

# Scrapy stuff:
    .scrapy

# Sphinx documentation
    docs/_build/

# PyBuilder
    target/

# Jupyter Notebook

# pyenv
    .python-version

# celery beat schedule file
    celerybeat-schedule

# SageMath parsed files
    *.sage.py

# Environments
    .venv
    env/
    venv/
    ENV/
    env.bak/
    venv.bak/

# Spyder project settings
    .spyderproject
    .spyproject

# Rope project settings
    .ropeproject

# mkdocs documentation
    /site

# mypy
    .mypy_cache/

### Ruby ###
    *.gem
    *.rbc
    /.config
    /coverage/
    /InstalledFiles
    /pkg/
    /spec/reports/
    /spec/examples.txt
    /test/tmp/
    /test/version_tmp/
    /tmp/

# Used by dotenv library to load environment variables.
# .env

## Specific to RubyMotion:
    .dat*
    .repl_history
    *.bridgesupport
    build-iPhoneOS/
    build-iPhoneSimulator/

## Specific to RubyMotion (use of CocoaPods):
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# vendor/Pods/

## Documentation cache and generated files:
    /.yardoc/
    /_yardoc/
    /doc/
    /rdoc/

## Environment normalization:
    /.bundle/
    /vendor/bundle
    /lib/bundler/man/

# for a library or gem, you might want to ignore these files since the code is
# intended to run in multiple environments; otherwise, check them in:
# Gemfile.lock
# .ruby-version
# .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
    .rvmrc

### SAS ###
# Binary data formats
    .sas7baud
    .sas7bdat
    .sas7bvew
    .sas7bndx
    .sas7bcat
    .sas7bacs
    .sas7bfdb
    .sas7bmdb
    .sas7bdmd
    .sas7bitm
    .sas7butl
    .sas7bput
    .sas7bbak

### Sass ###
    *.css.map

### SublimeText ###
# cache files for sublime text
    *.tmlanguage.cache
    *.tmPreferences.cache
    *.stTheme.cache

# workspace files are user-specific
    *.sublime-workspace

# project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using SublimeText
# *.sublime-project

# sftp configuration file
    sftp-config.json

# Package control specific files
    Package Control.last-run
    Package Control.ca-list
    Package Control.ca-bundle
    Package Control.system-ca-bundle
    Package Control.cache/
    Package Control.ca-certs/
    Package Control.merged-ca-bundle
    Package Control.user-ca-bundle
    oscrypto-ca-bundle.crt
    bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
    GitHub.sublime-settings

### Vim ###
# swap
    [._]*.s[a-v][a-z]
    [._]*.sw[a-p]
    [._]s[a-v][a-z]
    [._]sw[a-p]
# session
    Session.vim
# temporary
    .netrwhist
# auto-generated tag files
    tags

### OSX ###

# Icon must end with two \r

# Thumbnails

# Files that might appear in the root of a volume

# Directories potentially created on remote AFP share

### Windows ###
# Windows thumbnail cache files
    Thumbs.db
    ehthumbs.db
    ehthumbs_vista.db

# Folder config file
    Desktop.ini

# Recycle Bin used on file shares
    $RECYCLE.BIN/

# Windows Installer files
    *.cab
    *.msi
    *.msm
    *.msp

# Windows shortcuts
    *.lnk

### Xcode ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## Build generated
    DerivedData/

## Various settings
    *.pbxuser
    !default.pbxuser
    *.mode1v3
    !default.mode1v3
    *.mode2v3
    !default.mode2v3
    *.perspectivev3
    !default.perspectivev3
    xcuserdata/

## Other
    *.moved-aside
    *.xccheckout
    *.xcscmblueprint

### Xcode Patch ###
    *.xcodeproj/*
                  !*.xcodeproj/project.pbxproj
                  !*.xcodeproj/xcshareddata/
                  !*.xcworkspace/contents.xcworkspacedata
    /*.gcno

### VisualStudio ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
                *.suo
                *.user
                *.userosscache
                *.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
                *.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
    [Bb]uild[Ll]og.*

# NUNIT
    *.VisualState.xml
    TestResult.xml

# Build Results of an ATL Project
    [Dd]ebugPS/
    [Rr]eleasePS/
    dlldata.c

# .NET Core
    project.lock.json
    project.fragment.lock.json
    artifacts/
    **/Properties/launchSettings.json

    *_i.c
    *_p.c
    *_i.h
    *.meta
    *.pgc
    *.pgd
    *.rsp
    *.sbr
    *.tlb
    *.tli
    *.tlh
    *.tmp
    *.tmp_proj
    *.vspscc
    *.vssscc
    .builds
    *.pidb
    *.svclog
    *.scc

# Chutzpah Test files
    _Chutzpah*

# Visual C++ cache files
    ipch/
    *.aps
    *.ncb
    *.opendb
    *.opensdf
    *.sdf
    *.cachefile
    *.VC.db
    *.VC.VC.opendb

# Visual Studio profiler
    *.psess
    *.vsp
    *.vspx
    *.sap

# TFS 2012 Local Workspace
    $tf/

# Guidance Automation Toolkit
    *.gpState

# ReSharper is a .NET coding add-in
    _ReSharper*/
    *.[Rr]e[Ss]harper
    *.DotSettings.user

# JustCode is a .NET coding add-in
    .JustCode

# TeamCity is a build add-in
    _TeamCity*

# DotCover is a Code Coverage Tool
    *.dotCover

# Visual Studio code coverage results
    *.coverage
    *.coveragexml

# NCrunch
    _NCrunch_*
    .*crunch*.local.xml
    nCrunchTemp_*

# MightyMoose
    *.mm.*
    AutoTest.Net/

# Web workbench (sass)

# Installshield output folder
    [Ee]xpress/

# DocProject is a documentation generator add-in
    DocProject/buildhelp/
    DocProject/Help/*.HxT
                     DocProject/Help/*.HxC
                     DocProject/Help/*.hhc
                     DocProject/Help/*.hhk
                     DocProject/Help/*.hhp
                     DocProject/Help/Html2
                     DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
                    *.[Pp]ublish.xml
                    *.azurePubxml
# TODO: Uncomment the next line to ignore your web deploy settings.
# By default, sensitive information, such as encrypted password
# should be stored in the .pubxml.user file.
#*.pubxml
                    *.pubxml.user
                    *.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
                    *.nupkg
# The packages folder can be ignored because of Package Restore
                    **/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignorable files
    *.nuget.props
    *.nuget.targets

# Microsoft Azure Build Output
    csx/
    *.build.csdef

# Microsoft Azure Emulator
    ecf/
    rcf/

# Windows Store app package directories and files
    AppPackages/
    BundleArtifacts/
    Package.StoreAssociation.xml
    _pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
    *.[Cc]ache
# but keep track of directories ending in .cache
    !*.[Cc]ache/

# Others
    ClientBin/
    ~$*
    *.dbmdl
    *.dbproj.schemaview
    *.jfm
    *.pfx
    *.publishsettings
    orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
    Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
    _UpgradeReport_Files/
    Backup*/
    UpgradeLog*.XML
    UpgradeLog*.htm

# SQL Server files
    *.mdf
    *.ldf
    *.ndf

# Business Intelligence projects
    *.rdl.data
    *.bim.layout
    *.bim_*.settings

# Microsoft Fakes
    FakesAssemblies/

# GhostDoc plugin setting file
    *.GhostDoc.xml

# Node.js Tools for Visual Studio
    .ntvs_analysis.dat

# Typescript v1 declaration files

# Visual Studio 6 build log
    *.plg

# Visual Studio 6 workspace options file
    *.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
    *.vbw

# Visual Studio LightSwitch build output
    **/*.HTMLClient/GeneratedArtifacts
    **/*.DesktopClient/GeneratedArtifacts
    **/*.DesktopClient/ModelManifest.xml
    **/*.Server/GeneratedArtifacts
    **/*.Server/ModelManifest.xml
        _Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
       *.sln.iml

# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Telerik's JustMock configuration file
       *.jmconfig

# BizTalk build output
       *.btp.cs
       *.btm.cs
       *.odx.cs
       *.xsd.cs

### VisualStudio Patch ###
# By default, sensitive information, such as encrypted password
# should be stored in the .pubxml.user file.

# End of https://www.gitignore.io/api/c,sas,git,vim,osx,c++,perl,node,sass,java,ruby,cuda,latex,linux,macos,pydev,julia,cmake,xcode,django,jekyll,python,windows,gitbook,pycharm,phpstorm,commonlisp,sublimetext,visualstudio,jetbrains+all,jupyternotebook
